name: "test-on-pr"

on:
  push:
    branches:
      - main 
  pull_request: {}

# This workflow will build your tauri app without uploading it anywhere. 

jobs:
  publish-postdata:
    permissions:
      contents: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20.12.2"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
          
      - name: Install Tauri dependencies
        run: |
          npm install -g pnpm
          pnpm install
          pnpm tauri build

      # 上传 MSI 文件到 GitHub Release
      - name: Create Release (Draft)
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v0.10.1
          release_name: "v0.10.1"
          draft: true
          prerelease: false # 如果是预发布版本，将其设置为 true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload MSI File
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src-tauri/target/release/bundle/msi/tauri-app2_0.1.0_x64_en-US.msi
          asset_name: tauri-app2_0.1.0_x64_en-US.msi
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
